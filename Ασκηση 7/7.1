#include <avr/io.h>
#define F_CPU 16000000UL
#include <util/delay.h>
#include<avr/interrupt.h>
uint8_t one_wire_receive_bit() {
uint8_t temp=0;
uint8_t bit=0;
DDRD |= 0x10;
PORTD &= 0xEF;
_delay_us(2);
DDRD &= 0xEF;
PORTD &= 0xEF;
_delay_us(10);
temp = (PIND & 0x10);
_delay_us(49);
if (temp == 0x10) {bit = 0x01;}
else bit = 0x00;
return bit;
}
uint8_t one_wire_receive_byte() {
uint8_t bit;
uint8_t byte = 0x00;
for (int i = 0; i < 8; i++)
{
byte = (byte >> 1);
bit = one_wire_receive_bit();
if (bit == 0x01) bit = 0x80;
byte = (byte | bit);
}
return byte;
}
void one_wire_transmit_bit(uint8_t bit){
DDRD |= 0x10;
PORTD &= 0xEF;
_delay_us(2);
if(bit==1) PORTD |= 0x10;

else PORTD &= 0xEF;
_delay_us(58);
DDRD &= 0xEF;
PORTD &= 0xEF;
_delay_us(1);
return;
}
void one_wire_transmit_byte(uint8_t byte){
uint8_t bit;
for (int i = 0; i < 8; i++)
{
bit = byte & 0x01;
one_wire_transmit_bit( bit );
byte = (byte >> 1);
}
return;
}
uint8_t one_wire_reset(){
DDRD |= 0x10;
PORTD &= 0xEF;
_delay_us(480);
DDRD &= 0xEF;
PORTD &= 0xEF;
_delay_us(100);
uint8_t temp = (PIND & 0x10);
_delay_us(380);
if(temp==0){
return 1;
}else return 0;
}
int main(){
twi_init();
PCA9555_0_write(REG_CONFIGURATION_1, 0xF0);
PCA9555_0_write(REG_OUTPUT_1, 0);
LCD_init();
DDRD=0xFF;
DDRB = 0xFF;
uint16_t num;
float tem=0;
uint8_t temint1=0,temint2=0,temint3=0,temint4=0;
uint8_t r25 = 0,r24 = 0;
int a =0;
while(1){
num=0;
int check = one_wire_reset();
if (check==1){
one_wire_transmit_byte(0xCC);
one_wire_transmit_byte(0x44);
while(one_wire_receive_bit() != 0x01);
check = one_wire_reset();

if (check==1){
one_wire_transmit_byte(0xCC);
one_wire_transmit_byte(0xBE);
r24 = one_wire_receive_byte();
r25 = one_wire_receive_byte();}
}
if(check == 0) {r25 = 0x80; r24= 0x00;}
num = r25;
num = num <<8;
num = num + r24; // κανουμε τα 8bit 16bit
}
}
