#define F_CPU 16000000UL
#include<avr/io.h>
#include<avr/interrupt.h>
#include<util/delay.h>
int temp = 0;
int op = 0 ;
ISR(INT1_vect) // External INT1 ISR
{
// Interrupt on rising edge of INT1 pin
EICRA = (1 << ISC11) | (0 << ISC10);
// Enable the INT1 interrupt (PD3))
EIMSK = (1 << INT1);
sei(); // Enable global interrupts
op = 1;
if(temp == 1){ //if they were already on
PORTB = 0xFF; // Turn ON all LEDs for 500ms
for(int i = 0; i<500; i++){
_delay_ms(1); }
PORTB = 0x01;
if(op==1){
for(int i = 0; i<4500; i++){_delay_ms(1);} //Turn ON PB0 for 4500ms
}
}
else {
temp = 1;
PORTB = 0x01; // Turn ON PB0 for 5000ms
if(op==1){
for(int i = 0; i<5000; i++){_delay_ms(1);}
}
}
op = 0;
temp = 0;
PORTB = 0x00; // Turn OFF PB0
EIFR = (1 << INTF1); // Clear the flag of interrupt INT
}
int main(){
// Interrupt on rising edge of INT1 pin

EICRA = (1 << ISC11) | (0 << ISC10);
// Enable the INT1 interrupt (PD3))
EIMSK = (1 << INT1);
sei(); // Enable global interrupts
DDRB = 0xFF; // Set PORTB as output
while(1){
// Main loop
}
}
